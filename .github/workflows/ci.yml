on: [push, pull_request]

name: Continuous integration

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - run: |
          sudo apt-get install -y libxcb1-dev libxrandr-dev \
            libdbus-1-dev libpipewire-0.3-dev libwayland-dev libegl-dev \
            libgbm-dev
      - uses: actions/checkout@v2
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo test

  ui-tests:
    name: UI tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v3
      - name: "Prepare docker build: builder"
        run: mkdir -p target/.empty
      - name: "Build docker image: builder"
        uses: docker/build-push-action@v6
        with:
          context: target/.empty
          tags: widgem_builder
          file: tests/builder.Dockerfile
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: "Prepare docker build: tests"
        run: STAGE=2 tests/run.sh
      - name: "Build docker image: tests"
        uses: docker/build-push-action@v6
        with:
          context: target/docker/bin
          tags: widgem_tests
          file: tests/tests.Dockerfile
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Run UI tests
        run: STAGE=4 tests/run.sh
      - name: Upload test snapshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test_snapshots
          path: tests/snapshots

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      - uses: actions-rust-lang/rustfmt@v1

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - run: |
          sudo apt-get install -y libxcb1-dev libxrandr-dev \
            libdbus-1-dev libpipewire-0.3-dev libwayland-dev libegl-dev \
            libgbm-dev
      - uses: actions/checkout@v2
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy
      - run: cargo clippy -- --deny warnings
